do_become: yes

nginx_dynamic_defaults:

  apt:
    nginx_build_packages:
      # https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source
      - libpcre3
      - libpcre3-dev
      - unzip
      - zlib1g
      - zlib1g-dev
    nginx_extra_packages:
      # For GeoIP blocking feature
      - geoip-database
      - libgeoip1
    nginx_cleanup_packages:
      - git
      - libpcre3-dev
      - zlib1g-dev
  dnf:
    nginx_build_packages:
      # https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source
      - pcre
      - pcre-devel
      - unzip
      - zlib
      - zlib-devel
    nginx_extra_packages:
      # For GeoIP blocking feature
      - GeoIP-data
      - GeoIP
    nginx_cleanup_packages:
      - git
      - pcre-devel
      - zlib-devel

  yum:
    nginx_build_packages:
      # https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source
      - pcre
      - pcre-devel
      - unzip
      - zlib
      - zlib-devel
    nginx_extra_packages:
      # For GeoIP blocking feature
      - GeoIP-data
      - GeoIP
    nginx_cleanup_packages:
      - git
      - pcre-devel
      - zlib-devel

nginx_pip_path: '{{ omit }}'  # Using Ansible python interpreter
nginx_pip_umask: "{{ python_pip_umask|default('022') }}"
nginx_pip_environment: '{{ python_pip_environment|default({}) }}'
nginx_cryptography_version: latest

# Source code
nginx_build_flags:
  - '--with-pcre-jit'
  - '--with-ipv6'
  - '--with-http_ssl_module'
  - '--with-http_stub_status_module'
  - '--with-http_realip_module'
  - '--with-http_addition_module'
  - '--with-http_dav_module'
  - '--with-http_geoip_module'
  - '--with-http_gzip_static_module'
  - '--with-http_image_filter_module'
  # - '--with-http_spdy_module'
  - '--with-http_sub_module'
  - '--with-http_xslt_module'
  - '--with-http_auth_request_module'

nginx_clone_environment: {}
nginx_clone_packages:
  - git

# Daemon
nginx_config_file: nginx.conf.j2
nginx_daemon_enabled: "{{ nginx_daemon_modes[nginx_daemon_mode] == 'system' }}"
nginx_daemon_group: www-data
nginx_daemon_group_id: '{{ omit }}'
nginx_daemon_groups: '{{ omit }}'
nginx_daemon_path: /usr/share/nginx/sbin/nginx
nginx_daemon_user: www-data
nginx_daemon_user_id: '{{ omit }}'
nginx_reload_on_update: no
nginx_security_config_file: security.conf.j2

# Modules
nginx_length_hiding_filter_module_enabled: no
nginx_pagespeed_module_cache_directory: /var/cache/nginx_pagespeed
nginx_pagespeed_module_configure: ''
nginx_pagespeed_module_enabled: no
nginx_upload_module_enabled: no
nginx_zip_module_enabled: no

# Logging
nginx_log_rotations_frequency: daily
nginx_log_rotations_max_count: 49
nginx_log_rotations_config_file: logrotate.j2
nginx_log_rotations:
  - name: nginx
    config_file: '{{ nginx_log_rotations_config_file }}'

# Miscellaneous
nginx_keepalive_timeout: 65
nginx_server_header_engine: 'nginx'
nginx_types_hash_max_size: 2048
nginx_worker_connections: 768
nginx_worker_processes: '{{ ansible_processor_count }}'

# Networking
nginx_interface: null
nginx_port: 80
nginx_port_ssl: 443
nginx_ports:
  - '{{ nginx_port }}'
  - '{{ nginx_port_ssl }}'
nginx_ufw_rules: "{{ nginx_ports|map_items('port', direction='in', interface=nginx_interface or omit, proto='tcp', rule='allow')|list }}"

# Security
nginx_geoip_blocking_enabled: no
nginx_geoip_blocking_default: allow
nginx_geoip_countries_blacklist: []
nginx_geoip_countries_whitelist: []
nginx_ips_blacklist: []

# Private
_nginx_start: {}
